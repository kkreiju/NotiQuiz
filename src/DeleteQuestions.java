
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class DeleteQuestions extends javax.swing.JFrame {

    Data d = new Data();
    SoundEffects sfx = new SoundEffects();
    boolean darkmode;
    int turn = 10;

    /**
     * Creates new form GUI
     */
    public DeleteQuestions() {
        d.renderData();
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/icon.png")).getImage());
        if (d.data.get(0).equals("false")) {
            darkmode = true;
        } else {
            darkmode = false;
        }
        modeRender();
        d.renderNotes();
        if (!d.notesQuestions.isEmpty()) {
            d.renderGivenQuestions();
            startQuestions();
            prevnextUpdate();
        } else {
            delete.setEnabled(false);
            prevnext.setEnabled(false);
            this.setFocusable(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JLabel();
        topIcon = new javax.swing.JLabel();
        question = new javax.swing.JLabel();
        next = new javax.swing.JLabel();
        prev = new javax.swing.JLabel();
        prevnext = new javax.swing.JLabel();
        delete = new javax.swing.JLabel();
        choiceD = new javax.swing.JLabel();
        choiceC = new javax.swing.JLabel();
        choiceB = new javax.swing.JLabel();
        choiceA = new javax.swing.JLabel();
        mode = new javax.swing.JLabel();
        dOverlay = new javax.swing.JLabel();
        cOverlay = new javax.swing.JLabel();
        bOverlay = new javax.swing.JLabel();
        aOverlay = new javax.swing.JLabel();
        choices = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NotiQuiz");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backW.png"))); // NOI18N
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 790, -1, -1));

        topIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quiz.png"))); // NOI18N
        getContentPane().add(topIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        question.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        question.setForeground(new java.awt.Color(0, 0, 0));
        question.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        question.setText("No Notes Added");
        getContentPane().add(question, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 1560, 120));

        next.setBackground(new java.awt.Color(0, 0, 0));
        next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextMouseClicked(evt);
            }
        });
        getContentPane().add(next, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 690, 150, 70));

        prev.setBackground(new java.awt.Color(0, 0, 0));
        prev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prevMouseClicked(evt);
            }
        });
        getContentPane().add(prev, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 690, 160, 70));

        prevnext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prevnextW.png"))); // NOI18N
        getContentPane().add(prevnext, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 680, -1, -1));

        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deleteW.png"))); // NOI18N
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 790, -1, -1));

        choiceD.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        choiceD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(choiceD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 390, 370, 250));

        choiceC.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        choiceC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(choiceC, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 390, 370, 250));

        choiceB.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        choiceB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(choiceB, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 390, 380, 250));

        choiceA.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        choiceA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(choiceA, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 370, 250));

        mode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lightmode.png"))); // NOI18N
        mode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modeMouseClicked(evt);
            }
        });
        getContentPane().add(mode, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 10, -1, 60));
        getContentPane().add(dOverlay, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        getContentPane().add(cOverlay, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        getContentPane().add(bOverlay, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        getContentPane().add(aOverlay, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        choices.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices.png"))); // NOI18N
        getContentPane().add(choices, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whitebackground.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modeMouseClicked
        modeRender();
        sfx.playTrack("click.wav");
    }//GEN-LAST:event_modeMouseClicked

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        NotesMenu nm = new NotesMenu();
        nm.setLocationRelativeTo(null);
        nm.setResizable(false);
        nm.setVisible(true);
        dispose();
        sfx.playTrack("click.wav");
    }//GEN-LAST:event_backButtonMouseClicked

    private void prevMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevMouseClicked
        if (turn != 10 && !d.notesQuestions.isEmpty()) {
            turn--;
            startQuestions();
            prevnextUpdate();
            sfx.playTrack("click.wav");
        }
    }//GEN-LAST:event_prevMouseClicked

    private void nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseClicked
        if (turn < d.notesQuestions.size() && !d.notesQuestions.isEmpty()) {
            turn++;
            startQuestions();
            prevnextUpdate();
            sfx.playTrack("click.wav");
        }
    }//GEN-LAST:event_nextMouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        if (!d.notesQuestions.isEmpty()) {
            String[] options = {"Yes", "No"};
            int select = JOptionPane.showOptionDialog(
                    this,
                    "Are you sure to delete this?",
                    "Delete Note",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.WARNING_MESSAGE,
                    null,
                    options,
                    options[0]);

            switch (select) {
                case 0:
                    JOptionPane.showMessageDialog(this, "Note " + (turn - 9) + " deleted.", "Delete Note", JOptionPane.INFORMATION_MESSAGE);
                    for (int i = 0; i <= 5 ; i++) {
                        d.notesQuestions.remove(turn - 10);
                    }
                    d.saveNotes();
                    if(!d.notesQuestions.isEmpty()){
                        turn = 10;
                        startQuestions();
                    }
                    break;
                case 1:
                    //nothing
                    break;
            }
            sfx.playTrack("click.wav");
            if (d.notesQuestions.isEmpty()) {
                DeleteQuestions dn = new DeleteQuestions();
                dn.setLocationRelativeTo(null);
                dn.setResizable(false);
                dn.setVisible(true);
                dispose();
            }
        }

    }//GEN-LAST:event_deleteMouseClicked

    private void answerVerifier(String choice) {
        if (choice == "a") {
            revealAnswers("green", "red", "red", "red");
        } else if (choice == "b") {
            revealAnswers("red", "green", "red", "red");
        } else if (choice == "c") {
            revealAnswers("red", "red", "green", "red");
        } else {
            revealAnswers("red", "red", "red", "green");
        }
    }

    private void revealAnswers(String a, String b, String c, String d) {
        if (a == "green") {
            aOverlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices/greenA.png")));
        } else {
            aOverlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices/redA.png")));
        }
        if (b == "green") {
            bOverlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices/greenB.png")));
        } else {
            bOverlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices/redB.png")));
        }
        if (c == "green") {
            cOverlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices/greenC.png")));
        } else {
            cOverlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices/redC.png")));
        }
        if (d == "green") {
            dOverlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices/greenD.png")));
        } else {
            dOverlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices/redD.png")));
        }
    }

    private void startQuestions() {
        question.setText("<html><div style='text-align: center;'>" + d.questions.get(turn) + "</div></html>");
        choiceA.setText("<html><div style='text-align: center;'>" + d.a.get(turn) + "</div></html>");
        choiceB.setText("<html><div style='text-align: center;'>" + d.b.get(turn) + "</div></html>");
        choiceC.setText("<html><div style='text-align: center;'>" + d.c.get(turn) + "</div></html>");
        choiceD.setText("<html><div style='text-align: center;'>" + d.d.get(turn) + "</div></html>");
        if (d.correctAnswer.get(turn).equals("a")) {
            answerVerifier("a");
        } else if (d.correctAnswer.get(turn).equals("b")) {
            answerVerifier("b");
        } else if (d.correctAnswer.get(turn).equals("c")) {
            answerVerifier("c");
        } else {
            answerVerifier("d");
        }
    }

    private void prevnextUpdate() {
        if (turn < 11) {
            prev.setOpaque(true);
        } else {
            prev.setOpaque(false);
        }
        if (d.questions.size() - turn == 1) {
            next.setOpaque(true);
        } else {
            next.setOpaque(false);
        }
    }

    private void modeRender() {
        if (darkmode) {
            darkmode = false;
            background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whitebackground.png")));
            mode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lightmode.png")));
            backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backW.png")));
            prevnext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prevnextW.png")));
            prev.setBackground(new java.awt.Color(0, 0, 0));
            next.setBackground(new java.awt.Color(0, 0, 0));
            question.setForeground(new java.awt.Color(0, 0, 0));
            delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deleteW.png")));
            d.data.set(0, "false");
            d.saveData();
        } else {
            darkmode = true;
            background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackbackground.png")));
            mode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/darkmode.png")));
            backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backB.png")));
            prevnext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prevnextB.png")));
            prev.setBackground(new java.awt.Color(255, 255, 255));
            next.setBackground(new java.awt.Color(255, 255, 255));
            question.setForeground(new java.awt.Color(255, 255, 255));
            delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deleteB.png")));
            d.data.set(0, "true");
            d.saveData();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Start().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aOverlay;
    private javax.swing.JLabel bOverlay;
    private javax.swing.JLabel backButton;
    private javax.swing.JLabel background;
    private javax.swing.JLabel cOverlay;
    private javax.swing.JLabel choiceA;
    private javax.swing.JLabel choiceB;
    private javax.swing.JLabel choiceC;
    private javax.swing.JLabel choiceD;
    private javax.swing.JLabel choices;
    private javax.swing.JLabel dOverlay;
    private javax.swing.JLabel delete;
    private javax.swing.JLabel mode;
    private javax.swing.JLabel next;
    private javax.swing.JLabel prev;
    private javax.swing.JLabel prevnext;
    private javax.swing.JLabel question;
    private javax.swing.JLabel topIcon;
    // End of variables declaration//GEN-END:variables

}
