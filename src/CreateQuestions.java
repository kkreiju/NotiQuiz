
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.Timer;

public class CreateQuestions extends javax.swing.JFrame implements ActionListener {

    Data d = new Data();
    SoundEffects sfx = new SoundEffects();
    boolean darkmode;
    boolean questionPass = false;
    boolean correctAnswerPass = false;
    Timer timer = new Timer(3000, this);

    /**
     * Creates new form GUI
     */
    public CreateQuestions() {
        d.renderData();
        d.renderNotes();
        initComponents();
        prompt.setVisible(false);
        this.setIconImage(new ImageIcon(getClass().getResource("/icon.png")).getImage());
        if (d.data.get(0).equals("false")) {
            darkmode = true;
        } else {
            darkmode = false;
        }
        modeRender();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JLabel();
        topIcon = new javax.swing.JLabel();
        mode = new javax.swing.JLabel();
        prompt = new javax.swing.JLabel();
        save = new javax.swing.JLabel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        dTextField = new javax.swing.JTextField();
        cTextField = new javax.swing.JTextField();
        bTextField = new javax.swing.JTextField();
        aTextField = new javax.swing.JTextField();
        questionTextField = new javax.swing.JTextField();
        choices = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NotiQuiz");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backW.png"))); // NOI18N
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 790, -1, -1));

        topIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notes.png"))); // NOI18N
        getContentPane().add(topIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        mode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lightmode.png"))); // NOI18N
        mode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modeMouseClicked(evt);
            }
        });
        getContentPane().add(mode, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 10, -1, 60));

        prompt.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        getContentPane().add(prompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 850, -1, -1));

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saveW.png"))); // NOI18N
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        getContentPane().add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 680, -1, -1));

        jCheckBox4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jCheckBox4.setText("D");
        getContentPane().add(jCheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 400, -1, -1));

        jCheckBox3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jCheckBox3.setText("C");
        getContentPane().add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 400, -1, -1));

        jCheckBox2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jCheckBox2.setText("B");
        getContentPane().add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, -1, -1));

        jCheckBox1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jCheckBox1.setText("A");
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        dTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        dTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dTextField.setToolTipText("D");
        getContentPane().add(dTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 440, 310, 180));

        cTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        cTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cTextField.setToolTipText("C");
        getContentPane().add(cTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 440, 310, 180));

        bTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        bTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bTextField.setToolTipText("B");
        getContentPane().add(bTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 440, 310, 180));

        aTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        aTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aTextField.setToolTipText("A");
        getContentPane().add(aTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, 310, 180));

        questionTextField.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        questionTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        questionTextField.setToolTipText("Question");
        getContentPane().add(questionTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 670, -1));

        choices.setIcon(new javax.swing.ImageIcon(getClass().getResource("/choices.png"))); // NOI18N
        getContentPane().add(choices, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whitebackground.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        NotesMenu nm = new NotesMenu();
        nm.setLocationRelativeTo(null);
        nm.setResizable(false);
        nm.setVisible(true);
        dispose();
        sfx.playTrack("click.wav");
    }//GEN-LAST:event_backButtonMouseClicked

    private void modeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modeMouseClicked
        modeRender();
        sfx.playTrack("click.wav");
    }//GEN-LAST:event_modeMouseClicked

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        if (!questionTextField.getText().isEmpty() && !aTextField.getText().isEmpty() && !bTextField.getText().isEmpty() && !cTextField.getText().isEmpty() && !dTextField.getText().isEmpty()) {
            questionPass = true;
        } else {
            prompt.setText("Must fill all textfields");
            prompt.setVisible(true);
            timer.start();
        }
        checkboxVerifier(jCheckBox1.isSelected(), jCheckBox2.isSelected(), jCheckBox3.isSelected(), jCheckBox4.isSelected());
        if (questionPass && correctAnswerPass) {
            d.notesQuestions.add(questionTextField.getText());
            d.notesQuestions.add(aTextField.getText());
            d.notesQuestions.add(bTextField.getText());
            d.notesQuestions.add(cTextField.getText());
            d.notesQuestions.add(dTextField.getText());
            if (jCheckBox1.isSelected()) {
                d.notesQuestions.add("a");
            }
            else if (jCheckBox2.isSelected()) {
                d.notesQuestions.add("b");
            }
            else if (jCheckBox3.isSelected()) {
                d.notesQuestions.add("c");
            }
            else {
                d.notesQuestions.add("d");
            }
            prompt.setText("Saved");
            prompt.setVisible(true);
            d.saveNotes();
            timer.start();
        }
        sfx.playTrack("click.wav");
    }//GEN-LAST:event_saveMouseClicked

    private void checkboxVerifier(boolean aBool, boolean bBool, boolean cBool, boolean dBool) {
        int counter = 0;
        if (aBool) {
            counter++;
        }
        if (bBool) {
            counter++;
        }
        if (cBool) {
            counter++;
        }
        if (dBool) {
            counter++;
        }
        if (counter == 1) {
            correctAnswerPass = true;
        }
        else if(counter == 0){
            correctAnswerPass = false;
            prompt.setText("Select one correct answer");
            prompt.setVisible(true);
            timer.start();
        }
        else{
            correctAnswerPass = false;
            prompt.setText("Choose only one correct answer");
            prompt.setVisible(true);
            timer.start();
        }
    }

    private void modeRender() {
        if (darkmode) {
            darkmode = false;
            background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whitebackground.png")));
            mode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lightmode.png")));
            backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backW.png")));
            save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saveW.png")));
            prompt.setForeground(new java.awt.Color(0, 0, 0));
            d.data.set(0, "false");
            d.saveData();
        } else {
            darkmode = true;
            background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackbackground.png")));
            mode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/darkmode.png")));
            backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backB.png")));
            save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saveB.png")));
            prompt.setForeground(new java.awt.Color(255, 255, 255));
            d.data.set(0, "true");
            d.saveData();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Start().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aTextField;
    private javax.swing.JTextField bTextField;
    private javax.swing.JLabel backButton;
    private javax.swing.JLabel background;
    private javax.swing.JTextField cTextField;
    private javax.swing.JLabel choices;
    private javax.swing.JTextField dTextField;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel mode;
    private javax.swing.JLabel prompt;
    private javax.swing.JTextField questionTextField;
    private javax.swing.JLabel save;
    private javax.swing.JLabel topIcon;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        timer.stop();
        prompt.setVisible(false);
    }
}
